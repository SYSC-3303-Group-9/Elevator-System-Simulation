package elevator;

import java.time.LocalTime;

/**
* Generated by the ElevatorSubsystem to notify the scheduler once an Elevator has arrived.
*/
public class ElevatorEvent {
	
	private LocalTime time;
	private int floor;
	private int elevatorId;
	
	/**
	* Creates an instance of the ElevatorEvent class
	* @param floor The floor on which the elevator has arrived
	* @param elevatorId The elevator ID that distinguishes elevators
	*/
	public ElevatorEvent(LocalTime time, int floor, int elevatorId) {
		this.time = time;
		this.floor = floor;
		this.elevatorId = elevatorId;
	}
	
	/**
	 * Gets the time the event occurred.
	 * @return Event time.
	 */
	public LocalTime getTime() {
		return this.time;
	}
	
	/**
	* Gets the floor on which the Elevator reached
	* @return Floor number
	*/
	public int getFloor() {
		return floor;
	}
	
	/**
	* Gets the Elevator ID
	* @return Elevator ID number
	*/
	public int getElevatorId() {
		return elevatorId;
	}
	
	@Override
	public String toString() {
		return "Elevator " + Integer.toString(elevatorId) + " arrived at floor " + Integer.toString(floor);
		
	}
	
	@Override
	public boolean equals(Object o) {
		if (o == this) {
			return true;
		}
		
		if (o instanceof ElevatorEvent) {
			ElevatorEvent other = (ElevatorEvent)o;
			return getElevatorId() == other.getElevatorId()
					&& getFloor() == other.getFloor()
					&& getTime().equals(other.getTime());
		}
		return false;
	}
}
